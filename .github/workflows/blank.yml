name: Terraform Dispatcher
on:
  workflow_dispatch:
    inputs:
      verb:
        description: 'Terraform Verb (plan, apply, or destroy)'
        required: true
        default: ''
        options:
          - plan
          - apply
          - destroy

env:
  AZURE_STORAGE_ACCOUNT_NAME: devops2sources
  AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
  AZURE_FILE_SHARE_NAME: devops-platforms
  TFSTATE_FILE_PATH: infra-deploy/main/aks/build/terraform.tfstate
  TFVARS_FILE_PATH: infra-deploy/main/aks/terraform.tfvars
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do reposit√≥rio
      uses: actions/checkout@v2

    - name: Terraform files download
      run: |
        #az storage directory create --account-name $AZURE_STORAGE_ACCOUNT_NAME --account-key $AZURE_STORAGE_ACCOUNT_KEY --share-name $AZURE_FILE_SHARE_NAME --name infra-deploy --fail-on-exist
        #az storage file download --account-name $AZURE_STORAGE_ACCOUNT_NAME --account-key $AZURE_STORAGE_ACCOUNT_KEY --share-name $AZURE_FILE_SHARE_NAME --path $TFSTATE_FILE_PATH --dest infra-deploy/terraform.tfstate
        sudo az storage file download --account-name $AZURE_STORAGE_ACCOUNT_NAME --account-key $AZURE_STORAGE_ACCOUNT_KEY --share-name $AZURE_FILE_SHARE_NAME --path $TFVARS_FILE_PATH 
    
    - name: check terraform.tfvars
      run: cat terraform.tfvars
      
    - name: Run Terraform 
      env:
        VERB: ${{ github.event.inputs.verb }}
      run: |
        terraform init
        if [[ ${VERB} == "plan"  ]]; then 
            terraform ${VERB} -var="client_id=$AZURE_CLIENT_ID" -var="client_secret=$AZURE_CLIENT_SECRET"
        else
            terraform ${VERB} --auto-approve
        fi

    - name: terraform.tfstate upload
      run: |
        az storage file upload --account-name $AZURE_STORAGE_ACCOUNT_NAME --account-key $AZURE_STORAGE_ACCOUNT_KEY --share-name $AZURE_FILE_SHARE_NAME --path infra-deploy/terraform.tfstate --source $TFSTATE_FILE_PATH --type file --overwrite
